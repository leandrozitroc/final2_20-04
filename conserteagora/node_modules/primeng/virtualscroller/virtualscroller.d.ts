import { ElementRef, AfterContentInit, EventEmitter, QueryList, TemplateRef } from '@angular/core';
import { Header, Footer } from 'primeng/api';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/cdk/scrolling';
import * as ɵngcc3 from 'primeng/api';
export declare class VirtualScroller implements AfterContentInit, BlockableUI {
    el: ElementRef;
    value: any[];
    itemSize: number;
    style: any;
    styleClass: string;
    scrollHeight: any;
    lazy: boolean;
    rows: number;
    minBufferPx: number;
    maxBufferPx: number;
    delay: number;
    trackBy: Function;
    header: Header;
    footer: Footer;
    templates: QueryList<any>;
    viewport: CdkVirtualScrollViewport;
    onLazyLoad: EventEmitter<any>;
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    loadingItemTemplate: TemplateRef<any>;
    _totalRecords: number;
    page: number;
    _first: number;
    _cache: boolean;
    virtualScrollTimeout: any;
    virtualPage: number;
    constructor(el: ElementRef);
    get totalRecords(): number;
    set totalRecords(val: number);
    get first(): number;
    set first(val: number);
    get cache(): boolean;
    set cache(val: boolean);
    ngAfterContentInit(): void;
    onScrollIndexChange(index: number): void;
    getBlockableElement(): HTMLElement;
    scrollTo(index: number, mode?: ScrollBehavior): void;
    scrollToIndex(index: number, mode?: ScrollBehavior): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VirtualScroller, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<VirtualScroller, "p-virtualScroller", never, { "delay": "delay"; "trackBy": "trackBy"; "totalRecords": "totalRecords"; "first": "first"; "cache": "cache"; "value": "value"; "itemSize": "itemSize"; "style": "style"; "styleClass": "styleClass"; "scrollHeight": "scrollHeight"; "lazy": "lazy"; "rows": "rows"; "minBufferPx": "minBufferPx"; "maxBufferPx": "maxBufferPx"; }, { "onLazyLoad": "onLazyLoad"; }, ["header", "footer", "templates"], ["p-header", "p-footer"]>;
}
export declare class VirtualScrollerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<VirtualScrollerModule, [typeof VirtualScroller], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ScrollingModule], [typeof VirtualScroller, typeof ɵngcc3.SharedModule, typeof ɵngcc2.ScrollingModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<VirtualScrollerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbHNjcm9sbGVyLmQudHMiLCJzb3VyY2VzIjpbInZpcnR1YWxzY3JvbGxlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVhZGVyLCBGb290ZXIgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBDZGtWaXJ0dWFsU2Nyb2xsVmlld3BvcnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc2Nyb2xsaW5nJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVmlydHVhbFNjcm9sbGVyIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgQmxvY2thYmxlVUkge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHZhbHVlOiBhbnlbXTtcbiAgICBpdGVtU2l6ZTogbnVtYmVyO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHNjcm9sbEhlaWdodDogYW55O1xuICAgIGxhenk6IGJvb2xlYW47XG4gICAgcm93czogbnVtYmVyO1xuICAgIG1pbkJ1ZmZlclB4OiBudW1iZXI7XG4gICAgbWF4QnVmZmVyUHg6IG51bWJlcjtcbiAgICBkZWxheTogbnVtYmVyO1xuICAgIHRyYWNrQnk6IEZ1bmN0aW9uO1xuICAgIGhlYWRlcjogSGVhZGVyO1xuICAgIGZvb3RlcjogRm9vdGVyO1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgdmlld3BvcnQ6IENka1ZpcnR1YWxTY3JvbGxWaWV3cG9ydDtcbiAgICBvbkxhenlMb2FkOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgbG9hZGluZ0l0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBfdG90YWxSZWNvcmRzOiBudW1iZXI7XG4gICAgcGFnZTogbnVtYmVyO1xuICAgIF9maXJzdDogbnVtYmVyO1xuICAgIF9jYWNoZTogYm9vbGVhbjtcbiAgICB2aXJ0dWFsU2Nyb2xsVGltZW91dDogYW55O1xuICAgIHZpcnR1YWxQYWdlOiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIGdldCB0b3RhbFJlY29yZHMoKTogbnVtYmVyO1xuICAgIHNldCB0b3RhbFJlY29yZHModmFsOiBudW1iZXIpO1xuICAgIGdldCBmaXJzdCgpOiBudW1iZXI7XG4gICAgc2V0IGZpcnN0KHZhbDogbnVtYmVyKTtcbiAgICBnZXQgY2FjaGUoKTogYm9vbGVhbjtcbiAgICBzZXQgY2FjaGUodmFsOiBib29sZWFuKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBvblNjcm9sbEluZGV4Q2hhbmdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgc2Nyb2xsVG8oaW5kZXg6IG51bWJlciwgbW9kZT86IFNjcm9sbEJlaGF2aW9yKTogdm9pZDtcbiAgICBzY3JvbGxUb0luZGV4KGluZGV4OiBudW1iZXIsIG1vZGU/OiBTY3JvbGxCZWhhdmlvcik6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBWaXJ0dWFsU2Nyb2xsZXJNb2R1bGUge1xufVxuIl19