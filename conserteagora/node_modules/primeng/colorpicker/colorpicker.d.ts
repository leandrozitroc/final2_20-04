import { ElementRef, OnDestroy, EventEmitter, Renderer2, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const COLORPICKER_VALUE_ACCESSOR: any;
export declare class ColorPicker implements ControlValueAccessor, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    cd: ChangeDetectorRef;
    style: any;
    styleClass: string;
    inline: boolean;
    format: string;
    appendTo: string;
    disabled: boolean;
    tabindex: string;
    inputId: string;
    autoZIndex: boolean;
    baseZIndex: number;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onChange: EventEmitter<any>;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    containerViewChild: ElementRef;
    inputViewChild: ElementRef;
    value: any;
    inputBgColor: string;
    shown: boolean;
    overlayVisible: boolean;
    defaultColor: string;
    onModelChange: Function;
    onModelTouched: Function;
    documentClickListener: Function;
    documentResizeListener: any;
    documentMousemoveListener: Function;
    documentMouseupListener: Function;
    documentHueMoveListener: Function;
    scrollHandler: any;
    selfClick: boolean;
    colorDragging: boolean;
    hueDragging: boolean;
    overlay: HTMLDivElement;
    colorSelectorViewChild: ElementRef;
    colorHandleViewChild: ElementRef;
    hueViewChild: ElementRef;
    hueHandleViewChild: ElementRef;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);
    set colorSelector(element: ElementRef);
    set colorHandle(element: ElementRef);
    set hue(element: ElementRef);
    set hueHandle(element: ElementRef);
    onHueMousedown(event: MouseEvent): void;
    pickHue(event: MouseEvent): void;
    onColorMousedown(event: MouseEvent): void;
    pickColor(event: MouseEvent): void;
    getValueToUpdate(): any;
    updateModel(): void;
    writeValue(value: any): void;
    updateColorSelector(): void;
    updateUI(): void;
    onInputFocus(): void;
    show(): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    onOverlayAnimationEnd(event: AnimationEvent): void;
    appendOverlay(): void;
    restoreOverlayAppend(): void;
    alignOverlay(): void;
    hide(): void;
    onInputClick(): void;
    togglePanel(): void;
    onInputKeydown(event: KeyboardEvent): void;
    onPanelClick(): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    bindDocumentMousemoveListener(): void;
    unbindDocumentMousemoveListener(): void;
    bindDocumentMouseupListener(): void;
    unbindDocumentMouseupListener(): void;
    bindDocumentResizeListener(): void;
    unbindDocumentResizeListener(): void;
    onWindowResize(): void;
    bindScrollListener(): void;
    unbindScrollListener(): void;
    validateHSB(hsb: any): {
        h: number;
        s: number;
        b: number;
    };
    validateRGB(rgb: any): {
        r: number;
        g: number;
        b: number;
    };
    validateHEX(hex: any): any;
    HEXtoRGB(hex: any): {
        r: number;
        g: number;
        b: number;
    };
    HEXtoHSB(hex: any): {
        h: number;
        s: number;
        b: number;
    };
    RGBtoHSB(rgb: any): {
        h: number;
        s: number;
        b: number;
    };
    HSBtoRGB(hsb: any): {
        r: number;
        g: number;
        b: number;
    };
    RGBtoHEX(rgb: any): string;
    HSBtoHEX(hsb: any): string;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorPicker, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColorPicker, "p-colorPicker", never, { "format": "format"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "disabled": "disabled"; "style": "style"; "styleClass": "styleClass"; "inline": "inline"; "appendTo": "appendTo"; "tabindex": "tabindex"; "inputId": "inputId"; }, { "onChange": "onChange"; "onShow": "onShow"; "onHide": "onHide"; }, never, never>;
}
export declare class ColorPickerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorPickerModule, [typeof ColorPicker], [typeof ɵngcc1.CommonModule], [typeof ColorPicker]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorPickerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JwaWNrZXIuZC50cyIsInNvdXJjZXMiOlsiY29sb3JwaWNrZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBSZW5kZXJlcjIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDT0xPUlBJQ0tFUl9WQUxVRV9BQ0NFU1NPUjogYW55O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29sb3JQaWNrZXIgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciwgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBpbmxpbmU6IGJvb2xlYW47XG4gICAgZm9ybWF0OiBzdHJpbmc7XG4gICAgYXBwZW5kVG86IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB0YWJpbmRleDogc3RyaW5nO1xuICAgIGlucHV0SWQ6IHN0cmluZztcbiAgICBhdXRvWkluZGV4OiBib29sZWFuO1xuICAgIGJhc2VaSW5kZXg6IG51bWJlcjtcbiAgICBzaG93VHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBoaWRlVHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25TaG93OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkhpZGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnRhaW5lclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBpbnB1dFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB2YWx1ZTogYW55O1xuICAgIGlucHV0QmdDb2xvcjogc3RyaW5nO1xuICAgIHNob3duOiBib29sZWFuO1xuICAgIG92ZXJsYXlWaXNpYmxlOiBib29sZWFuO1xuICAgIGRlZmF1bHRDb2xvcjogc3RyaW5nO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudENsaWNrTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIGRvY3VtZW50UmVzaXplTGlzdGVuZXI6IGFueTtcbiAgICBkb2N1bWVudE1vdXNlbW92ZUxpc3RlbmVyOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudE1vdXNldXBMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgZG9jdW1lbnRIdWVNb3ZlTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIHNjcm9sbEhhbmRsZXI6IGFueTtcbiAgICBzZWxmQ2xpY2s6IGJvb2xlYW47XG4gICAgY29sb3JEcmFnZ2luZzogYm9vbGVhbjtcbiAgICBodWVEcmFnZ2luZzogYm9vbGVhbjtcbiAgICBvdmVybGF5OiBIVE1MRGl2RWxlbWVudDtcbiAgICBjb2xvclNlbGVjdG9yVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGNvbG9ySGFuZGxlVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGh1ZVZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBodWVIYW5kbGVWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgc2V0IGNvbG9yU2VsZWN0b3IoZWxlbWVudDogRWxlbWVudFJlZik7XG4gICAgc2V0IGNvbG9ySGFuZGxlKGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIHNldCBodWUoZWxlbWVudDogRWxlbWVudFJlZik7XG4gICAgc2V0IGh1ZUhhbmRsZShlbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBvbkh1ZU1vdXNlZG93bihldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgcGlja0h1ZShldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgb25Db2xvck1vdXNlZG93bihldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgcGlja0NvbG9yKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBnZXRWYWx1ZVRvVXBkYXRlKCk6IGFueTtcbiAgICB1cGRhdGVNb2RlbCgpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgdXBkYXRlQ29sb3JTZWxlY3RvcigpOiB2b2lkO1xuICAgIHVwZGF0ZVVJKCk6IHZvaWQ7XG4gICAgb25JbnB1dEZvY3VzKCk6IHZvaWQ7XG4gICAgc2hvdygpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUFuaW1hdGlvblN0YXJ0KGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgb25PdmVybGF5QW5pbWF0aW9uRW5kKGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgYXBwZW5kT3ZlcmxheSgpOiB2b2lkO1xuICAgIHJlc3RvcmVPdmVybGF5QXBwZW5kKCk6IHZvaWQ7XG4gICAgYWxpZ25PdmVybGF5KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIG9uSW5wdXRDbGljaygpOiB2b2lkO1xuICAgIHRvZ2dsZVBhbmVsKCk6IHZvaWQ7XG4gICAgb25JbnB1dEtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIG9uUGFuZWxDbGljaygpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50TW91c2Vtb3ZlTGlzdGVuZXIoKTogdm9pZDtcbiAgICB1bmJpbmREb2N1bWVudE1vdXNlbW92ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50TW91c2V1cExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRNb3VzZXVwTGlzdGVuZXIoKTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRSZXNpemVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50UmVzaXplTGlzdGVuZXIoKTogdm9pZDtcbiAgICBvbldpbmRvd1Jlc2l6ZSgpOiB2b2lkO1xuICAgIGJpbmRTY3JvbGxMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZFNjcm9sbExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdmFsaWRhdGVIU0IoaHNiOiBhbnkpOiB7XG4gICAgICAgIGg6IG51bWJlcjtcbiAgICAgICAgczogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICB2YWxpZGF0ZVJHQihyZ2I6IGFueSk6IHtcbiAgICAgICAgcjogbnVtYmVyO1xuICAgICAgICBnOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIHZhbGlkYXRlSEVYKGhleDogYW55KTogYW55O1xuICAgIEhFWHRvUkdCKGhleDogYW55KToge1xuICAgICAgICByOiBudW1iZXI7XG4gICAgICAgIGc6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgSEVYdG9IU0IoaGV4OiBhbnkpOiB7XG4gICAgICAgIGg6IG51bWJlcjtcbiAgICAgICAgczogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICBSR0J0b0hTQihyZ2I6IGFueSk6IHtcbiAgICAgICAgaDogbnVtYmVyO1xuICAgICAgICBzOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIEhTQnRvUkdCKGhzYjogYW55KToge1xuICAgICAgICByOiBudW1iZXI7XG4gICAgICAgIGc6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgUkdCdG9IRVgocmdiOiBhbnkpOiBzdHJpbmc7XG4gICAgSFNCdG9IRVgoaHNiOiBhbnkpOiBzdHJpbmc7XG4gICAgb25PdmVybGF5SGlkZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2xvclBpY2tlck1vZHVsZSB7XG59XG4iXX0=