import { ElementRef, AfterViewChecked, AfterContentInit, QueryList, TemplateRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { FilterService } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
import * as ɵngcc4 from 'primeng/ripple';
export declare class OrderList implements AfterViewChecked, AfterContentInit {
    el: ElementRef;
    cd: ChangeDetectorRef;
    filterService: FilterService;
    header: string;
    style: any;
    styleClass: string;
    listStyle: any;
    responsive: boolean;
    filterBy: string;
    filterPlaceholder: string;
    filterLocale: string;
    metaKeySelection: boolean;
    dragdrop: boolean;
    controlsPosition: string;
    ariaFilterLabel: string;
    filterMatchMode: string;
    selectionChange: EventEmitter<any>;
    trackBy: Function;
    onReorder: EventEmitter<any>;
    onSelectionChange: EventEmitter<any>;
    onFilterEvent: EventEmitter<any>;
    listViewChild: ElementRef;
    templates: QueryList<any>;
    itemTemplate: TemplateRef<any>;
    _selection: any[];
    movedUp: boolean;
    movedDown: boolean;
    itemTouched: boolean;
    draggedItemIndex: number;
    dragOverItemIndex: number;
    dragging: boolean;
    filterValue: string;
    visibleOptions: any[];
    _value: any[];
    constructor(el: ElementRef, cd: ChangeDetectorRef, filterService: FilterService);
    get selection(): any[];
    set selection(val: any[]);
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    get value(): any[];
    set value(val: any[]);
    onItemClick(event: any, item: any, index: any): void;
    onFilterKeyup(event: any): void;
    filter(): void;
    isItemVisible(item: any): boolean;
    onItemTouchEnd(event: any): void;
    isSelected(item: any): boolean;
    moveUp(event: any): void;
    moveTop(event: any): void;
    moveDown(event: any): void;
    moveBottom(event: any): void;
    onDragStart(event: DragEvent, index: number): void;
    onDragOver(event: DragEvent, index: number): void;
    onDragLeave(event: DragEvent): void;
    onDrop(event: DragEvent, index: number): void;
    onDragEnd(event: DragEvent): void;
    onListMouseMove(event: MouseEvent): void;
    onItemKeydown(event: KeyboardEvent, item: any, index: Number): void;
    findNextItem(item: any): any;
    findPrevItem(item: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OrderList, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OrderList, "p-orderList", never, { "metaKeySelection": "metaKeySelection"; "controlsPosition": "controlsPosition"; "filterMatchMode": "filterMatchMode"; "trackBy": "trackBy"; "selection": "selection"; "value": "value"; "header": "header"; "style": "style"; "styleClass": "styleClass"; "listStyle": "listStyle"; "responsive": "responsive"; "filterBy": "filterBy"; "filterPlaceholder": "filterPlaceholder"; "filterLocale": "filterLocale"; "dragdrop": "dragdrop"; "ariaFilterLabel": "ariaFilterLabel"; }, { "selectionChange": "selectionChange"; "onReorder": "onReorder"; "onSelectionChange": "onSelectionChange"; "onFilterEvent": "onFilterEvent"; }, ["templates"], never>;
}
export declare class OrderListModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<OrderListModule, [typeof OrderList], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule, typeof ɵngcc4.RippleModule], [typeof OrderList, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<OrderListModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJsaXN0LmQudHMiLCJzb3VyY2VzIjpbIm9yZGVybGlzdC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyVmlld0NoZWNrZWQsIEFmdGVyQ29udGVudEluaXQsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPcmRlckxpc3QgaW1wbGVtZW50cyBBZnRlclZpZXdDaGVja2VkLCBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgZmlsdGVyU2VydmljZTogRmlsdGVyU2VydmljZTtcbiAgICBoZWFkZXI6IHN0cmluZztcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBsaXN0U3R5bGU6IGFueTtcbiAgICByZXNwb25zaXZlOiBib29sZWFuO1xuICAgIGZpbHRlckJ5OiBzdHJpbmc7XG4gICAgZmlsdGVyUGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBmaWx0ZXJMb2NhbGU6IHN0cmluZztcbiAgICBtZXRhS2V5U2VsZWN0aW9uOiBib29sZWFuO1xuICAgIGRyYWdkcm9wOiBib29sZWFuO1xuICAgIGNvbnRyb2xzUG9zaXRpb246IHN0cmluZztcbiAgICBhcmlhRmlsdGVyTGFiZWw6IHN0cmluZztcbiAgICBmaWx0ZXJNYXRjaE1vZGU6IHN0cmluZztcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHRyYWNrQnk6IEZ1bmN0aW9uO1xuICAgIG9uUmVvcmRlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25TZWxlY3Rpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uRmlsdGVyRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGxpc3RWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX3NlbGVjdGlvbjogYW55W107XG4gICAgbW92ZWRVcDogYm9vbGVhbjtcbiAgICBtb3ZlZERvd246IGJvb2xlYW47XG4gICAgaXRlbVRvdWNoZWQ6IGJvb2xlYW47XG4gICAgZHJhZ2dlZEl0ZW1JbmRleDogbnVtYmVyO1xuICAgIGRyYWdPdmVySXRlbUluZGV4OiBudW1iZXI7XG4gICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgZmlsdGVyVmFsdWU6IHN0cmluZztcbiAgICB2aXNpYmxlT3B0aW9uczogYW55W107XG4gICAgX3ZhbHVlOiBhbnlbXTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgY2Q6IENoYW5nZURldGVjdG9yUmVmLCBmaWx0ZXJTZXJ2aWNlOiBGaWx0ZXJTZXJ2aWNlKTtcbiAgICBnZXQgc2VsZWN0aW9uKCk6IGFueVtdO1xuICAgIHNldCBzZWxlY3Rpb24odmFsOiBhbnlbXSk7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdDaGVja2VkKCk6IHZvaWQ7XG4gICAgZ2V0IHZhbHVlKCk6IGFueVtdO1xuICAgIHNldCB2YWx1ZSh2YWw6IGFueVtdKTtcbiAgICBvbkl0ZW1DbGljayhldmVudDogYW55LCBpdGVtOiBhbnksIGluZGV4OiBhbnkpOiB2b2lkO1xuICAgIG9uRmlsdGVyS2V5dXAoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZmlsdGVyKCk6IHZvaWQ7XG4gICAgaXNJdGVtVmlzaWJsZShpdGVtOiBhbnkpOiBib29sZWFuO1xuICAgIG9uSXRlbVRvdWNoRW5kKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGlzU2VsZWN0ZWQoaXRlbTogYW55KTogYm9vbGVhbjtcbiAgICBtb3ZlVXAoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgbW92ZVRvcChldmVudDogYW55KTogdm9pZDtcbiAgICBtb3ZlRG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBtb3ZlQm90dG9tKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJhZ1N0YXJ0KGV2ZW50OiBEcmFnRXZlbnQsIGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIG9uRHJhZ092ZXIoZXZlbnQ6IERyYWdFdmVudCwgaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgb25EcmFnTGVhdmUoZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQ7XG4gICAgb25Ecm9wKGV2ZW50OiBEcmFnRXZlbnQsIGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIG9uRHJhZ0VuZChldmVudDogRHJhZ0V2ZW50KTogdm9pZDtcbiAgICBvbkxpc3RNb3VzZU1vdmUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uSXRlbUtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQsIGl0ZW06IGFueSwgaW5kZXg6IE51bWJlcik6IHZvaWQ7XG4gICAgZmluZE5leHRJdGVtKGl0ZW06IGFueSk6IGFueTtcbiAgICBmaW5kUHJldkl0ZW0oaXRlbTogYW55KTogYW55O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3JkZXJMaXN0TW9kdWxlIHtcbn1cbiJdfQ==