import { ElementRef, AfterContentInit, TemplateRef, QueryList, NgZone, EventEmitter, ChangeDetectorRef, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/ripple';
export declare class Carousel implements AfterContentInit {
    el: ElementRef;
    zone: NgZone;
    cd: ChangeDetectorRef;
    get page(): number;
    set page(val: number);
    get numVisible(): number;
    set numVisible(val: number);
    get numScroll(): number;
    set numScroll(val: number);
    responsiveOptions: any[];
    orientation: string;
    verticalViewPortHeight: string;
    contentClass: String;
    indicatorsContentClass: String;
    get value(): any[];
    set value(val: any[]);
    circular: boolean;
    autoplayInterval: number;
    style: any;
    styleClass: string;
    onPage: EventEmitter<any>;
    itemsContainer: ElementRef;
    headerFacet: any;
    footerFacet: any;
    templates: QueryList<any>;
    _numVisible: number;
    _numScroll: number;
    _oldNumScroll: number;
    prevState: any;
    defaultNumScroll: number;
    defaultNumVisible: number;
    _page: number;
    _value: any[];
    carouselStyle: any;
    id: string;
    totalShiftedItems: any;
    isRemainingItemsAdded: boolean;
    animationTimeout: any;
    translateTimeout: any;
    remainingItems: number;
    _items: any[];
    startPos: any;
    documentResizeListener: any;
    clonedItemsForStarting: any[];
    clonedItemsForFinishing: any[];
    allowAutoplay: boolean;
    interval: any;
    isCreated: boolean;
    swipeThreshold: number;
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    constructor(el: ElementRef, zone: NgZone, cd: ChangeDetectorRef);
    ngOnChanges(simpleChange: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngAfterContentChecked(): void;
    createStyle(): void;
    calculatePosition(): void;
    setCloneItems(): void;
    firstIndex(): number;
    lastIndex(): number;
    totalDots(): number;
    totalDotsArray(): any[];
    isVertical(): boolean;
    isCircular(): boolean;
    isAutoplay(): boolean;
    isForwardNavDisabled(): boolean;
    isBackwardNavDisabled(): boolean;
    isEmpty(): boolean;
    navForward(e: any, index?: any): void;
    navBackward(e: any, index?: any): void;
    onDotClick(e: any, index: any): void;
    step(dir: any, page: any): void;
    startAutoplay(): void;
    stopAutoplay(): void;
    onTransitionEnd(): void;
    onTouchStart(e: any): void;
    onTouchMove(e: any): void;
    onTouchEnd(e: any): void;
    changePageOnTouch(e: any, diff: any): void;
    bindDocumentListeners(): void;
    unbindDocumentListeners(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Carousel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Carousel, "p-carousel", never, { "orientation": "orientation"; "verticalViewPortHeight": "verticalViewPortHeight"; "contentClass": "contentClass"; "indicatorsContentClass": "indicatorsContentClass"; "circular": "circular"; "autoplayInterval": "autoplayInterval"; "page": "page"; "numVisible": "numVisible"; "numScroll": "numScroll"; "value": "value"; "responsiveOptions": "responsiveOptions"; "style": "style"; "styleClass": "styleClass"; }, { "onPage": "onPage"; }, ["headerFacet", "footerFacet", "templates"], ["p-header", "p-footer"]>;
}
export declare class CarouselModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<CarouselModule, [typeof Carousel], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.RippleModule], [typeof ɵngcc1.CommonModule, typeof Carousel, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<CarouselModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwuZC50cyIsInNvdXJjZXMiOlsiY2Fyb3VzZWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgQWZ0ZXJDb250ZW50SW5pdCwgVGVtcGxhdGVSZWYsIFF1ZXJ5TGlzdCwgTmdab25lLCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXJvdXNlbCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHpvbmU6IE5nWm9uZTtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgZ2V0IHBhZ2UoKTogbnVtYmVyO1xuICAgIHNldCBwYWdlKHZhbDogbnVtYmVyKTtcbiAgICBnZXQgbnVtVmlzaWJsZSgpOiBudW1iZXI7XG4gICAgc2V0IG51bVZpc2libGUodmFsOiBudW1iZXIpO1xuICAgIGdldCBudW1TY3JvbGwoKTogbnVtYmVyO1xuICAgIHNldCBudW1TY3JvbGwodmFsOiBudW1iZXIpO1xuICAgIHJlc3BvbnNpdmVPcHRpb25zOiBhbnlbXTtcbiAgICBvcmllbnRhdGlvbjogc3RyaW5nO1xuICAgIHZlcnRpY2FsVmlld1BvcnRIZWlnaHQ6IHN0cmluZztcbiAgICBjb250ZW50Q2xhc3M6IFN0cmluZztcbiAgICBpbmRpY2F0b3JzQ29udGVudENsYXNzOiBTdHJpbmc7XG4gICAgZ2V0IHZhbHVlKCk6IGFueVtdO1xuICAgIHNldCB2YWx1ZSh2YWw6IGFueVtdKTtcbiAgICBjaXJjdWxhcjogYm9vbGVhbjtcbiAgICBhdXRvcGxheUludGVydmFsOiBudW1iZXI7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgb25QYWdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpdGVtc0NvbnRhaW5lcjogRWxlbWVudFJlZjtcbiAgICBoZWFkZXJGYWNldDogYW55O1xuICAgIGZvb3RlckZhY2V0OiBhbnk7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBfbnVtVmlzaWJsZTogbnVtYmVyO1xuICAgIF9udW1TY3JvbGw6IG51bWJlcjtcbiAgICBfb2xkTnVtU2Nyb2xsOiBudW1iZXI7XG4gICAgcHJldlN0YXRlOiBhbnk7XG4gICAgZGVmYXVsdE51bVNjcm9sbDogbnVtYmVyO1xuICAgIGRlZmF1bHROdW1WaXNpYmxlOiBudW1iZXI7XG4gICAgX3BhZ2U6IG51bWJlcjtcbiAgICBfdmFsdWU6IGFueVtdO1xuICAgIGNhcm91c2VsU3R5bGU6IGFueTtcbiAgICBpZDogc3RyaW5nO1xuICAgIHRvdGFsU2hpZnRlZEl0ZW1zOiBhbnk7XG4gICAgaXNSZW1haW5pbmdJdGVtc0FkZGVkOiBib29sZWFuO1xuICAgIGFuaW1hdGlvblRpbWVvdXQ6IGFueTtcbiAgICB0cmFuc2xhdGVUaW1lb3V0OiBhbnk7XG4gICAgcmVtYWluaW5nSXRlbXM6IG51bWJlcjtcbiAgICBfaXRlbXM6IGFueVtdO1xuICAgIHN0YXJ0UG9zOiBhbnk7XG4gICAgZG9jdW1lbnRSZXNpemVMaXN0ZW5lcjogYW55O1xuICAgIGNsb25lZEl0ZW1zRm9yU3RhcnRpbmc6IGFueVtdO1xuICAgIGNsb25lZEl0ZW1zRm9yRmluaXNoaW5nOiBhbnlbXTtcbiAgICBhbGxvd0F1dG9wbGF5OiBib29sZWFuO1xuICAgIGludGVydmFsOiBhbnk7XG4gICAgaXNDcmVhdGVkOiBib29sZWFuO1xuICAgIHN3aXBlVGhyZXNob2xkOiBudW1iZXI7XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZvb3RlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcbiAgICBjcmVhdGVTdHlsZSgpOiB2b2lkO1xuICAgIGNhbGN1bGF0ZVBvc2l0aW9uKCk6IHZvaWQ7XG4gICAgc2V0Q2xvbmVJdGVtcygpOiB2b2lkO1xuICAgIGZpcnN0SW5kZXgoKTogbnVtYmVyO1xuICAgIGxhc3RJbmRleCgpOiBudW1iZXI7XG4gICAgdG90YWxEb3RzKCk6IG51bWJlcjtcbiAgICB0b3RhbERvdHNBcnJheSgpOiBhbnlbXTtcbiAgICBpc1ZlcnRpY2FsKCk6IGJvb2xlYW47XG4gICAgaXNDaXJjdWxhcigpOiBib29sZWFuO1xuICAgIGlzQXV0b3BsYXkoKTogYm9vbGVhbjtcbiAgICBpc0ZvcndhcmROYXZEaXNhYmxlZCgpOiBib29sZWFuO1xuICAgIGlzQmFja3dhcmROYXZEaXNhYmxlZCgpOiBib29sZWFuO1xuICAgIGlzRW1wdHkoKTogYm9vbGVhbjtcbiAgICBuYXZGb3J3YXJkKGU6IGFueSwgaW5kZXg/OiBhbnkpOiB2b2lkO1xuICAgIG5hdkJhY2t3YXJkKGU6IGFueSwgaW5kZXg/OiBhbnkpOiB2b2lkO1xuICAgIG9uRG90Q2xpY2soZTogYW55LCBpbmRleDogYW55KTogdm9pZDtcbiAgICBzdGVwKGRpcjogYW55LCBwYWdlOiBhbnkpOiB2b2lkO1xuICAgIHN0YXJ0QXV0b3BsYXkoKTogdm9pZDtcbiAgICBzdG9wQXV0b3BsYXkoKTogdm9pZDtcbiAgICBvblRyYW5zaXRpb25FbmQoKTogdm9pZDtcbiAgICBvblRvdWNoU3RhcnQoZTogYW55KTogdm9pZDtcbiAgICBvblRvdWNoTW92ZShlOiBhbnkpOiB2b2lkO1xuICAgIG9uVG91Y2hFbmQoZTogYW55KTogdm9pZDtcbiAgICBjaGFuZ2VQYWdlT25Ub3VjaChlOiBhbnksIGRpZmY6IGFueSk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50TGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2Fyb3VzZWxNb2R1bGUge1xufVxuIl19